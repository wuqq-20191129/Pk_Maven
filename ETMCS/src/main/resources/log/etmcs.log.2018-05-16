2018-05-16 10:23:51:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 10:23:52:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 10:23:53:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:74)] - SOCKET通讯端口失败！
2018-05-16 10:23:53:ERROR [com.goldsign.etmcs.application.Application.openCommu(Application.java:587)] - 打开SOCKET通讯失败:打开SOCKET通讯异常，请联系管理员!
2018-05-16 10:24:00:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 10:24:00:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 10:24:00:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 10:24:00:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 10:24:00:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 10:24:00:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：false
2018-05-16 10:24:00:INFO  [com.goldsign.etmcs.thread.EsCommuMonitorThread.run(EsCommuMonitorThread.java:49)] - 重新连接ES通讯...
2018-05-16 10:24:01:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:74)] - SOCKET通讯端口失败！
2018-05-16 10:24:19:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 10:24:22:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 10:24:25:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180514 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180514 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 10:24:29:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180505 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180505 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 10:24:30:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180505 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180505 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 10:25:01:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：false
2018-05-16 10:25:01:INFO  [com.goldsign.etmcs.thread.EsCommuMonitorThread.run(EsCommuMonitorThread.java:49)] - 重新连接ES通讯...
2018-05-16 10:25:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:74)] - SOCKET通讯端口失败！
2018-05-16 10:26:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：false
2018-05-16 10:26:02:INFO  [com.goldsign.etmcs.thread.EsCommuMonitorThread.run(EsCommuMonitorThread.java:49)] - 重新连接ES通讯...
2018-05-16 10:26:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 10:26:02:INFO  [com.goldsign.etmcs.thread.EsCommuMonitorThread.run(EsCommuMonitorThread.java:53)] - 成功重新连接ES通讯！
2018-05-16 10:26:41:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 10:27:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:28:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:29:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:30:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:31:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:32:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:33:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:33:47:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 10:33:48:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 10:33:48:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 10:33:54:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 10:33:54:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 10:33:54:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 10:33:54:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 10:33:54:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 10:33:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:34:00:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180514 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180514 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 10:34:13:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180508 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180508 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 10:34:21:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180302 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180302 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 10:34:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:35:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:36:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:37:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:38:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:39:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:40:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:41:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:42:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:43:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:44:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:45:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:46:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:47:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:48:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:49:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:50:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:51:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:52:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:53:28:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180314 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180314 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 10:53:37:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180509 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180509 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 10:53:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:54:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:55:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:56:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:57:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:58:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 10:59:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:00:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:01:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:02:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:03:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:04:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:05:21:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2018-05-16 11:05:21:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:391)] - 关闭通讯成功！
2018-05-16 11:05:28:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 11:05:28:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 11:05:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 11:05:28:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 11:05:28:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 11:05:28:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 11:05:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 11:05:28:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 11:05:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 11:05:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 11:05:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 11:05:34:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 11:05:34:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 11:05:34:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 11:05:34:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 11:05:34:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 11:05:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:05:37:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 11:05:40:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180501 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180501 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 11:06:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:07:16:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 11:07:17:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 11:07:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 11:07:23:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 11:07:23:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 11:07:23:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 11:07:23:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 11:07:23:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 11:07:23:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:08:12:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180501 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180501 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 11:08:23:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:08:23:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180502 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180502 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 11:08:34:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180515 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180515 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 11:09:23:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:39:32:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 11:39:32:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 11:39:32:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 11:39:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 11:39:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 11:39:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 11:39:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 11:39:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 11:39:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:40:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:41:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:42:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:43:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:44:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:45:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:46:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:47:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:48:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:49:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:50:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:51:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:52:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:53:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:54:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:55:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:56:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:57:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:58:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 11:59:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:00:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:01:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:02:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:03:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:04:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:05:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:06:09:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2018-05-16 12:06:09:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:391)] - 关闭通讯成功！
2018-05-16 12:06:16:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 12:06:16:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 12:06:16:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 12:06:16:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 12:06:16:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:06:16:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 12:06:16:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:06:16:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:06:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:06:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:06:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:07:17:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 12:07:17:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 12:07:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 12:07:17:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 12:07:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:07:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 12:07:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:07:17:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:07:18:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:07:18:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:07:18:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:07:25:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:07:25:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 12:07:25:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 12:07:25:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 12:07:25:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 12:07:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:07:31:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180509 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180509 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 12:07:35:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.getOperaterLogs(OperateLogDao.java:51)] - sqlStr:select * from W_ACC_TK.W_IC_ET_OPRTLOG  where to_char(oprt_time,'yyyyMMdd') >= '20180502' and to_char(oprt_time,'yyyyMMdd') <= '20180516'
2018-05-16 12:08:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:08:35:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '106001'
2018-05-16 12:08:35:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:08:36:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:08:36:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:08:36:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000300000002'
2018-05-16 12:08:36:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:09:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '106001'
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=阿凡提7053                                                                                                                   , certificateCode=12341234123415705               , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000300007053'
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:09:38:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.writeMakeCard(MakeCardDao.java:206)] - sqlStr:update W_ACC_TK.W_IC_ET_ISSUE set employee_department =?, employee_position =?, use_state='0',employee_name=?, gender=?, phy_id=?, employee_class=?,  print_id=?, make_oper=?, make_time=sysdate where use_state='1' and employee_id =?  and logical_id=? 
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.writeMakeCard(MakeCardDao.java:217)] - sqlStr:insert INTO W_ACC_TK.W_IC_ET_ISSUE(employee_department, employee_position, employee_name, gender, phy_id, employee_class, print_id, make_oper,employee_id, logical_id, make_time, return_oper, return_time, use_state, remark) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate, '', '', '0', '')
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:09:39:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='0'
2018-05-16 12:09:52:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:09:52:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:09:52:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:09:55:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:09:55:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:09:55:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:09:57:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:09:57:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:09:57:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:10:01:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:734)] - sqlStr:update W_ACC_TK.W_IC_ET_ISSUE set employee_department =?, employee_position =?, employee_class =?, update_oper=?, update_time=sysdate where use_state='0' and employee_id =?  and logical_id=? 
2018-05-16 12:10:01:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:10:01:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:754)] - 测试sqlStr:true
2018-05-16 12:10:01:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:10:02:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:10:02:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:10:02:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:10:05:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:10:05:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:10:05:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:10:10:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:734)] - sqlStr:update W_ACC_TK.W_IC_ET_ISSUE set employee_department =?, employee_position =?, employee_class =?, update_oper=?, update_time=sysdate where use_state='0' and employee_id =?  and logical_id=? 
2018-05-16 12:10:10:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:10:10:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:754)] - 测试sqlStr:true
2018-05-16 12:10:10:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:10:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:10:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:10:11:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:10:14:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:10:14:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:10:14:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:10:17:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:10:17:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:10:17:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:10:24:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))
2018-05-16 12:10:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:10:39:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180516 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 12:10:42:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsCount(MakeCardDao.java:302)] - sqlStr:select COUNT(1) count,decode(use_state,1,'已退卡','0','已发卡','')use_state_desc,use_state from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20180501 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20180501 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20180516 23:59:59','yyyyMMdd hh24:mi:ss'))GROUP BY use_state
2018-05-16 12:10:47:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.getOperaterLogs(OperateLogDao.java:51)] - sqlStr:select * from W_ACC_TK.W_IC_ET_OPRTLOG  where to_char(oprt_time,'yyyyMMdd') >= '20180508' and to_char(oprt_time,'yyyyMMdd') <= '20180516'
2018-05-16 12:11:10:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.getOperaterLogs(OperateLogDao.java:51)] - sqlStr:select * from W_ACC_TK.W_IC_ET_OPRTLOG  where to_char(oprt_time,'yyyyMMdd') >= '20180516' and to_char(oprt_time,'yyyyMMdd') <= '20180516'
2018-05-16 12:11:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:11:35:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:11:35:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:11:35:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:11:55:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='0' and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=01, cStationNo=03, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:12:10:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:12:11:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:12:11:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.writeReturnCard(MakeCardDao.java:260)] - sqlStr:update W_ACC_TK.W_IC_ET_ISSUE set use_state='1', return_oper=?, return_time=sysdate where use_state='0' and employee_id =?  and logical_id=? 
2018-05-16 12:12:11:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:12:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=2, bStatus=215, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=02, cStationNo=01, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:12:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:12:11:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='1' and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:12:18:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:12:18:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:12:18:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='1' and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:12:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:12:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:12:20:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:12:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:12:33:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:12:33:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:12:33:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:13:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:14:25:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:14:44:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2018-05-16 12:14:44:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:391)] - 关闭通讯成功！
2018-05-16 12:37:05:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 12:37:05:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:37:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:37:14:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:37:14:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 12:37:14:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 12:37:14:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 12:37:14:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 12:37:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:37:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:37:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:37:20:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:37:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=2, bStatus=215, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=02, cStationNo=01, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:37:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:37:29:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:37:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=2, bStatus=215, cTicketType=0500, cLogicalID=8300000300007053, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20170901000000, cExpire=20180902, rfu=                , lBalance=10000, lDeposite=12, cLine=02, cStationNo=01, cDateStart=20170909, cDateEnd=20180902, dtDaliyActive=0000000, bEffectDay=365, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=川贝枇杷糖浆                                                                                                              , certificateCode=106001                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:37:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:37:29:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106001' and trim(logical_id) = '8300000300007053'
2018-05-16 12:37:35:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:37:35:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:37:35:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:38:12:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '106003'
2018-05-16 12:38:12:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:38:12:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:38:12:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:38:12:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000300000002'
2018-05-16 12:38:12:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:38:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:38:45:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:38:45:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:38:45:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:39:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:40:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:41:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:42:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:43:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:44:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:44:56:ERROR [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:317)] - 票卡分析异常：java.io.IOException: write error
2018-05-16 12:45:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:45:23:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 12:45:24:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:45:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:45:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:45:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 12:45:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 12:45:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 12:45:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 12:45:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:45:39:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:45:39:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:45:39:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000003'
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '106004'
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000300000003'
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.writeMakeCard(MakeCardDao.java:206)] - sqlStr:update W_ACC_TK.W_IC_ET_ISSUE set employee_department =?, employee_position =?, use_state='0',employee_name=?, gender=?, phy_id=?, employee_class=?,  print_id=?, make_oper=?, make_time=sysdate where use_state='1' and employee_id =?  and logical_id=? 
2018-05-16 12:45:58:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.writeMakeCard(MakeCardDao.java:217)] - sqlStr:insert INTO W_ACC_TK.W_IC_ET_ISSUE(employee_department, employee_position, employee_name, gender, phy_id, employee_class, print_id, make_oper,employee_id, logical_id, make_time, return_oper, return_time, use_state, remark) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate, '', '', '0', '')
2018-05-16 12:45:59:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:45:59:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:45:59:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='0'
2018-05-16 12:46:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:46:36:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '106005'
2018-05-16 12:46:36:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:46:36:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:46:36:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:46:36:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000300000002'
2018-05-16 12:46:36:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:46:48:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:46:48:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:46:48:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:46:55:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:46:55:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:46:55:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:04:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:47:04:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:04:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:05:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:47:05:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:05:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:05:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:47:05:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:05:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:08:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:47:08:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:08:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:47:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:11:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:47:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:21:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=1, certificateName=sst                                                                                                                             , certificateCode=106004                          , certificateType=5, certificateSex=1, tradeCount=0}
2018-05-16 12:47:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:21:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '106004' and trim(logical_id) = '8300000300000003'
2018-05-16 12:47:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000002, cPhysicalID=C301803C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:47:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:47:27:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000002'
2018-05-16 12:47:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:48:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:49:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:50:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2018-05-16 12:50:29:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:391)] - 关闭通讯成功！
2018-05-16 12:50:39:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 12:50:39:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 12:50:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 12:51:16:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 12:51:16:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 12:51:16:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 12:51:16:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 12:51:16:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 12:51:16:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 12:51:22:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=         ￌﾾ|Q@, lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:51:22:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:51:22:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '' and trim(logical_id) = '8300000300000003'
2018-05-16 12:51:38:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '106006'
2018-05-16 12:51:38:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:51:38:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=200, cTicketType=0500, cLogicalID=8300000300000003, cPhysicalID=D3297F3C            , bCharacter=2, cIssueDate=20180515000000, cExpire=21190902, rfu=                , lBalance=0, lDeposite=100, cLine=01, cStationNo=03, cDateStart=20180516, cDateEnd=21190902, dtDaliyActive=0000000, bEffectDay=30, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=001, certificateIscompany=0, certificateIsmetro=0, certificateName=                                                                                                                                , certificateCode=                                , certificateType=0, certificateSex=0, tradeCount=0}
2018-05-16 12:51:38:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2018-05-16 12:51:38:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000300000003'
2018-05-16 12:51:38:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2018-05-16 12:51:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2018-05-16 12:51:43:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:391)] - 关闭通讯成功！
2018-05-16 18:45:23:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 18:45:23:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 18:45:23:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 18:45:23:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 18:45:23:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 18:45:23:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 18:45:23:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 18:45:23:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 18:45:24:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 18:45:24:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 18:45:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 18:47:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 18:47:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 18:47:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 18:47:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 18:47:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 18:47:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 18:47:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2018-05-16 18:47:58:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:391)] - 关闭通讯成功！
2018-05-16 18:48:02:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2018-05-16 18:48:02:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2018-05-16 18:48:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2018-05-16 18:48:02:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:592)] - 打开SOCKET通讯成功！
2018-05-16 18:48:02:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2018-05-16 18:48:02:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2018-05-16 18:48:02:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 18:48:02:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2018-05-16 18:48:03:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2018-05-16 18:48:03:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2018-05-16 18:48:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2018-05-16 18:48:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2018-05-16 18:48:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2018-05-16 18:48:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2018-05-16 18:48:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2018-05-16 18:48:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2018-05-16 18:48:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 18:49:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2018-05-16 18:49:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2018-05-16 18:49:47:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:391)] - 关闭通讯成功！
