2017-10-24 09:35:20:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 09:35:20:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 09:35:20:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 09:35:20:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 09:35:20:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 09:35:20:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 09:35:20:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:35:20:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 09:35:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 09:35:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 09:35:21:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:35:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 09:35:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 09:35:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 09:35:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 09:35:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 09:35:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 09:36:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 09:36:03:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 09:51:33:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 09:51:33:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 09:51:33:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:52:13:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 09:52:13:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 09:52:13:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 09:52:13:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 09:52:13:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 09:52:13:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 09:52:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 09:52:29:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 09:53:29:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 09:53:29:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 09:53:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 09:53:29:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 09:53:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 09:53:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 09:53:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:53:29:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 09:53:30:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 09:53:30:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 09:53:30:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:54:09:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 09:54:09:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 09:54:09:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 09:54:09:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 09:54:09:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 09:54:09:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 09:54:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 09:54:27:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 09:54:34:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 09:54:34:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 09:54:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:54:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 09:54:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 09:54:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 09:54:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 09:54:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 09:54:44:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 09:55:44:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 09:56:09:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 09:56:09:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 09:56:22:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 09:56:22:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 09:56:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:56:41:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 09:56:41:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 09:56:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:56:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 09:56:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 09:56:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 09:56:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 09:56:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 09:56:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 09:56:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 09:56:54:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 09:57:08:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 09:57:08:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 09:57:08:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 09:57:08:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 09:57:08:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 09:57:09:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 09:57:09:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:57:09:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 09:57:09:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 09:57:09:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 09:57:09:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 09:57:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 09:57:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 09:57:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 09:57:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 09:57:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 09:57:50:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 09:58:04:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 09:58:04:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:02:16:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:02:17:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:02:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:02:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:02:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:02:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:02:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:02:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:02:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:02:38:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:02:38:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:02:42:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:02:42:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:02:42:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:02:42:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:02:42:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:02:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:02:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:02:43:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:02:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:02:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:02:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:03:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:03:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:03:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:03:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:03:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:03:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:04:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:05:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:05:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:05:47:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:05:54:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:05:54:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:05:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:05:54:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:05:54:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:05:54:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:05:54:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:05:54:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:05:55:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:05:55:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:05:55:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:06:33:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:06:33:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:06:33:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:06:33:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:06:33:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:06:33:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:06:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:06:41:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:07:55:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:07:55:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:07:55:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:08:03:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:08:03:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:08:03:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:08:03:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:08:03:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:08:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:09:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:10:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:10:38:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:10:38:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:11:18:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:11:18:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:11:18:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:13:22:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:13:22:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:14:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:14:29:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:14:45:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:14:45:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:14:45:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:14:45:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:14:45:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:14:45:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:14:45:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:16:38:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:16:38:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:16:38:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:16:38:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:16:38:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:16:38:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:16:38:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:16:38:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:16:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:16:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:16:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:17:29:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:17:29:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:17:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:17:29:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:17:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:17:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:17:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:17:29:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:17:30:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:17:30:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:17:30:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:18:58:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:18:58:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:18:58:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:18:58:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:18:58:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:18:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:19:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:20:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:21:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:22:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:23:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:24:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:25:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:26:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:27:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:28:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:29:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:30:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:31:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:32:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:33:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:34:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:35:58:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:36:15:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:36:15:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:36:47:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:36:47:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:36:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:36:47:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:36:47:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:36:47:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:36:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:36:47:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:36:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:36:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:36:48:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:37:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:37:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:37:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:37:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:37:27:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:37:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:38:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:39:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:40:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:41:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:42:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:43:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:44:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:45:17:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:45:17:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:45:17:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:45:55:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:45:55:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:45:55:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:45:55:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:45:55:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:45:55:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:46:10:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:46:10:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:46:10:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:46:10:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:46:10:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:46:10:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:46:10:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:46:10:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:46:11:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:46:11:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:46:11:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:46:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:46:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:46:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:46:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:46:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:46:18:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:46:43:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:46:43:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:46:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:46:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:46:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:46:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:46:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:46:50:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:46:50:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:47:10:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:47:10:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:47:21:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:47:21:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:47:21:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:47:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:47:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:47:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:47:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:47:31:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:47:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:48:31:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:49:00:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:49:00:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:49:07:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:49:07:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:49:07:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:49:07:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:49:07:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:49:08:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:49:08:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:49:08:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:49:08:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:49:08:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:49:08:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:49:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:49:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:49:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:49:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:49:18:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:49:18:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:50:18:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:50:33:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:50:33:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 10:57:43:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:57:43:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:57:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:58:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:58:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:58:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:58:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:58:22:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:58:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:58:35:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 10:58:35:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 10:58:35:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 10:58:35:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 10:58:35:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 10:58:36:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 10:58:36:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:58:36:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 10:58:36:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 10:58:36:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 10:58:36:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 10:58:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 10:58:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 10:58:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 10:58:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 10:58:44:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 10:58:44:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 10:58:52:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 10:58:52:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 11:04:02:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 11:04:02:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 11:04:03:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:04:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 11:04:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 11:04:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 11:04:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 11:04:12:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 11:04:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:05:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:06:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:07:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:08:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:09:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:10:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:10:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 11:10:22:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 11:10:33:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 11:10:33:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 11:10:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:10:42:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 11:10:42:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 11:10:42:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 11:10:42:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 11:10:42:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 11:10:42:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:11:09:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 11:11:09:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 11:11:09:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 11:11:16:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 11:11:16:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 11:11:16:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 11:11:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 11:11:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 11:11:23:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 11:11:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 11:11:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 11:11:27:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 11:11:39:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 11:11:39:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 11:11:39:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 11:11:42:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:12:42:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:13:42:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:14:34:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 11:14:34:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 11:17:47:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 11:17:47:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 11:17:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 11:17:47:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 11:17:47:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 11:17:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 11:17:48:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:17:48:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 11:17:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 11:17:48:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 11:17:48:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:17:57:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 11:17:57:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 11:17:57:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 11:17:57:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 11:17:57:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 11:17:57:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:17:59:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 11:17:59:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 11:31:41:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 11:31:41:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 11:31:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 11:31:41:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 11:31:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 11:31:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 11:31:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:31:41:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 11:31:42:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 11:31:42:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 11:31:42:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 11:31:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 11:31:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 11:31:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 11:31:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 11:31:49:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 11:31:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:31:58:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 11:31:58:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 11:31:58:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 11:32:04:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：200.
2017-10-24 11:32:10:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：200.
2017-10-24 11:32:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:33:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:34:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:35:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:36:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:37:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:38:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:39:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:40:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:41:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:42:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:43:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:44:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:45:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:46:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:47:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:48:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:49:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:50:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:51:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:52:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:53:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:54:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:55:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:56:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:57:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:58:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 11:59:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:00:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:01:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:02:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:03:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:04:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:05:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:06:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:07:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:08:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:09:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:10:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:11:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:12:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:13:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:14:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:15:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:16:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:17:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:18:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:19:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:20:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:21:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:22:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:23:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:24:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:25:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:26:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:27:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:28:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:29:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:30:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:31:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:32:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:33:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:34:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:35:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:36:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:37:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:38:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:39:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:40:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:41:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:42:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:43:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:44:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:45:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:46:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:47:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:48:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:49:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:50:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:51:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:52:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:53:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:54:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:55:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:56:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:57:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:58:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 12:59:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:00:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:01:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:02:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:03:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:04:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:05:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:06:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:07:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:08:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:09:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:10:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:11:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:12:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:13:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:14:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:15:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:16:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:17:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:18:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:19:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:20:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:21:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:22:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:23:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:24:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:25:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:26:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:27:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:28:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:29:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:30:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:31:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:32:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:33:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:34:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:35:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:36:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:37:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:38:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:39:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:40:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:41:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:42:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:43:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:44:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:45:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:46:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:47:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:48:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:49:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:50:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:51:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:52:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:53:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:54:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:55:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:56:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:57:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:58:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 13:59:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:00:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:01:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:02:49:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:02:59:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:02:59:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:02:59:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:03:02:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:03:02:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:03:02:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:03:07:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:03:07:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:03:07:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:03:20:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 14:03:20:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 14:07:14:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 14:07:14:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 14:07:14:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 14:07:24:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 14:07:24:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 14:07:24:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 14:07:24:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 14:07:24:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 14:07:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:07:54:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and (return_time >= to_date('20150101 00:00:00','yyyyMMdd hh24:mi:ss') or make_time >= to_date('20150101 00:00:00','yyyyMMdd hh24:mi:ss')) and (return_time <= to_date('20150324 23:59:59','yyyyMMdd hh24:mi:ss') or make_time <= to_date('20150324 23:59:59','yyyyMMdd hh24:mi:ss'))
2017-10-24 14:08:08:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:08:08:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:08:08:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:08:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:09:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:10:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:11:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:12:12:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:12:12:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:12:12:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:12:13:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:12:13:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:12:13:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:12:14:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:12:14:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:12:14:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:12:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:12:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:12:23:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:12:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:13:08:ERROR [com.goldsign.etmcs.util.PubUtil.handleExceptionNoThrow(PubUtil.java:28)] - 错误:
java.sql.SQLIntegrityConstraintViolationException: ORA-01400: 无法将 NULL 插入 ("W_ACC_TK"."W_IC_ET_PUB_FLAG"."CODE")

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:439)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:395)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:802)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:436)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:186)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:521)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:205)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1008)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1307)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3449)
	at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3530)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1350)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)
	at com.goldsign.lib.db.util.DbHelper.executeUpdate(DbHelper.java:645)
	at com.goldsign.etmcs.dao.impl.MakeCardDao.setDepartment(MakeCardDao.java:572)
	at com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:656)
	at com.goldsign.etmcs.service.impl.MakeCardService.editCard(MakeCardService.java:100)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.confirm(EditCardPanel.java:869)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.ConfirmBtActionPerformed(EditCardPanel.java:834)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.access$100(EditCardPanel.java:35)
	at com.goldsign.etmcs.ui.panel.EditCardPanel$2.actionPerformed(EditCardPanel.java:241)
	at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022)
	at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2348)
	at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)
	at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)
	at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:252)
	at java.awt.Component.processMouseEvent(Component.java:6533)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4525)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:90)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
2017-10-24 14:13:08:ERROR [com.goldsign.etmcs.util.PubUtil.handleExceptionNoThrow(PubUtil.java:28)] - 错误:
java.sql.SQLIntegrityConstraintViolationException: ORA-01400: 无法将 NULL 插入 ("W_ACC_TK"."W_IC_ET_PUB_FLAG"."CODE")

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:439)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:395)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:802)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:436)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:186)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:521)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:205)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1008)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1307)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3449)
	at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3530)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1350)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)
	at com.goldsign.lib.db.util.DbHelper.executeUpdate(DbHelper.java:645)
	at com.goldsign.etmcs.dao.impl.MakeCardDao.setPosition(MakeCardDao.java:610)
	at com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:657)
	at com.goldsign.etmcs.service.impl.MakeCardService.editCard(MakeCardService.java:100)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.confirm(EditCardPanel.java:869)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.ConfirmBtActionPerformed(EditCardPanel.java:834)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.access$100(EditCardPanel.java:35)
	at com.goldsign.etmcs.ui.panel.EditCardPanel$2.actionPerformed(EditCardPanel.java:241)
	at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022)
	at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2348)
	at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)
	at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)
	at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:252)
	at java.awt.Component.processMouseEvent(Component.java:6533)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4525)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:90)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
2017-10-24 14:13:08:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:666)] - sqlStr:update W_ACC_TK.W_IC_ET_ISSUE set employee_department =?, employee_position =?, update_oper=?, update_time=sysdate where use_state='0' and employee_id =?  and logical_id=? 
2017-10-24 14:13:08:ERROR [com.goldsign.etmcs.util.PubUtil.handleExceptionNoThrow(PubUtil.java:28)] - 错误:
java.sql.SQLSyntaxErrorException: ORA-00904: "UPDATE_TIME": 标识符无效

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:439)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:395)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:802)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:436)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:186)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:521)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:205)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1008)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1307)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3449)
	at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3530)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1350)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)
	at com.goldsign.lib.db.util.DbHelper.executeUpdate(DbHelper.java:645)
	at com.goldsign.etmcs.dao.impl.MakeCardDao.editCard(MakeCardDao.java:668)
	at com.goldsign.etmcs.service.impl.MakeCardService.editCard(MakeCardService.java:100)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.confirm(EditCardPanel.java:869)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.ConfirmBtActionPerformed(EditCardPanel.java:834)
	at com.goldsign.etmcs.ui.panel.EditCardPanel.access$100(EditCardPanel.java:35)
	at com.goldsign.etmcs.ui.panel.EditCardPanel$2.actionPerformed(EditCardPanel.java:241)
	at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022)
	at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2348)
	at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)
	at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)
	at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:252)
	at java.awt.Component.processMouseEvent(Component.java:6533)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4525)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:90)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
2017-10-24 14:13:08:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 14:13:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:13:35:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:13:35:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:13:35:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:13:40:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:13:40:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:13:40:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:13:45:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:13:45:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:13:45:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:13:58:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:13:58:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:13:58:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:14:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:14:42:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='0' and employee_id like '%100303%'
2017-10-24 14:14:52:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCards(MakeCardDao.java:78)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='0' and employee_id like '%100503%'
2017-10-24 14:15:18:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:18:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:18:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:20:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:21:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:22:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:22:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:22:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:23:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:23:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:15:26:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:26:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:26:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:32:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:32:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:32:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:49:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '100503' and trim(logical_id) = '4100000010000885'
2017-10-24 14:15:55:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:55:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:55:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and use_state='0' and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:57:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:15:57:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:15:57:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:15:58:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '100503' and trim(logical_id) = '4100000010000885'
2017-10-24 14:16:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:17:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:18:14:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:18:14:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:18:14:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:18:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:19:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:20:16:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:20:16:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:20:16:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:20:17:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:20:17:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:20:17:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:20:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:20:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:20:20:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:20:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:20:20:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:20:20:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:20:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:21:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:22:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:23:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:24:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:25:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:26:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:27:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:28:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:29:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:30:17:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:30:17:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:30:17:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:30:22:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:30:22:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:30:22:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:30:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:30:32:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:30:32:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:30:32:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:31:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:31:43:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 14:31:43:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 14:31:43:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 14:32:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:33:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:34:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:35:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:36:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:37:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:38:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:39:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:40:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:41:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:42:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:43:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:44:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:45:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:46:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:47:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:48:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:49:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:50:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:51:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:52:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:53:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:54:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:55:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:56:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:57:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:58:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 14:59:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:00:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:01:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:02:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:03:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:04:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:05:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:06:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:07:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:08:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:09:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:10:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:11:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:12:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:13:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:14:17:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '100348' and trim(logical_id) = '4100000010000796'
2017-10-24 15:14:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:15:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:16:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:17:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:18:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:19:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:20:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:21:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:22:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:23:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:24:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:25:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:26:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:27:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:28:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:29:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:30:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:31:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:32:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:33:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:34:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:35:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:36:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:37:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:38:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:39:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:40:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:41:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:42:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:43:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:44:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:45:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:46:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:47:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:48:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:49:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:50:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:51:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:52:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:53:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:54:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:55:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:56:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:57:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:58:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 15:59:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:00:24:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:00:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 16:00:39:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 16:13:56:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 16:13:56:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:13:56:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:14:05:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 16:14:05:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 16:14:05:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 16:14:05:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 16:14:05:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 16:14:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:15:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:16:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:16:12:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201710'
2017-10-24 16:16:12:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:16:12:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：200.
2017-10-24 16:16:12:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:16:26:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201710'
2017-10-24 16:16:26:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:16:26:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:16:26:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:16:26:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 16:16:26:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:16:29:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201710'
2017-10-24 16:16:29:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:16:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:16:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:16:29:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 16:16:29:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:16:33:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:16:33:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:16:33:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 16:17:02:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:17:02:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:17:02:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0201, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:17:02:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:17:02:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 16:17:02:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:17:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:18:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:19:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:20:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:21:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:22:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:22:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:22:11:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:22:11:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 16:22:46:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:22:46:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:22:47:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:23:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:24:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:25:05:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:25:35:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 16:25:35:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 16:25:41:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 16:25:41:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:25:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:26:28:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 16:26:28:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 16:26:28:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 16:26:28:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 16:26:28:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 16:26:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:26:55:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:26:55:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:27:00:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:27:00:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:27:20:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 16:27:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:28:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:28:40:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:28:40:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:28:40:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:28:40:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:28:40:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:28:40:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:28:40:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:29:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:30:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:31:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:32:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:33:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:34:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:35:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:36:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:37:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:38:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:39:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:40:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:42:38:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 16:42:39:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:42:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:42:47:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 16:42:47:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 16:42:47:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 16:42:47:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 16:42:47:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 16:42:47:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:43:12:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:43:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 16:43:22:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 16:43:28:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 16:43:28:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 16:43:28:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 16:43:28:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 16:43:28:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:43:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 16:43:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:43:29:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:43:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:43:29:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:43:29:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:43:41:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 16:43:41:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 16:43:41:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 16:43:41:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 16:43:41:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 16:43:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:44:16:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:44:16:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:44:20:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:44:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:44:45:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:45:05:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:45:05:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:45:12:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:45:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:46:00:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:46:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:47:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:48:17:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:48:17:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:48:20:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:48:32:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:48:35:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201700'
2017-10-24 16:48:35:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:48:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:49:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:50:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:51:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:52:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:53:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:54:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:55:41:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:56:43:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 16:56:43:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:56:43:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:56:51:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 16:56:51:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 16:56:51:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 16:56:51:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 16:56:51:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 16:56:51:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:56:55:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:57:00:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:57:04:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:57:07:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:57:10:WARN  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:312)] - 票卡分析失败，错误码：1724.
2017-10-24 16:57:51:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:58:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:58:23:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:58:23:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 16:58:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:58:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:58:27:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 16:58:51:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201800'
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 16:59:21:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 16:59:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:59:29:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:59:29:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 16:59:32:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 16:59:32:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 16:59:32:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 16:59:51:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:00:13:INFO  [com.goldsign.etmcs.service.impl.CommuService.closeCommu(CommuService.java:98)] - ES通讯关闭，成功！
2017-10-24 17:00:13:INFO  [com.goldsign.etmcs.application.Application.exitEventCallBack(Application.java:388)] - 关闭通讯成功！
2017-10-24 17:00:26:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadLogFile(ConfigFileService.java:100)] - 加载日志文件成功！
2017-10-24 17:00:26:INFO  [com.goldsign.csfrm.service.impl.ConfigFileService.loadConfigAndLogFile(ConfigFileService.java:47)] - 加载配置文件成功！
2017-10-24 17:00:26:INFO  [com.goldsign.etmcs.service.impl.CommuService.openCommu(CommuService.java:70)] - SOCKET通讯端口成功！
2017-10-24 17:00:26:INFO  [com.goldsign.etmcs.application.Application.openCommu(Application.java:585)] - 打开SOCKET通讯成功！
2017-10-24 17:00:26:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 17:00:27:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:9
2017-10-24 17:00:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 17:00:27:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 17:00:27:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 17:00:27:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 17:00:27:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 17:00:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTablePubFlag(UtilDao.java:74)] - sqlStr:SELECT type,code,code_text FROM w_acc_tk.w_ic_et_pub_flag
2017-10-24 17:00:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CARD_MAIN_ID code,CARD_MAIN_NAME code_text FROM w_acc_st.w_op_prm_card_main WHERE trim(record_flag)='3'
2017-10-24 17:00:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT LINE_ID code,LINE_NAME code_text FROM w_acc_st.w_op_prm_line WHERE trim(record_flag)='3'
2017-10-24 17:00:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT STATION_ID code,CHINESE_NAME code_text FROM w_acc_st.w_op_prm_station WHERE trim(record_flag)='3'
2017-10-24 17:00:39:INFO  [com.goldsign.etmcs.dao.impl.UtilDao.getTableColumn(UtilDao.java:44)] - sqlStr:SELECT CODE code,CODE_TEXT code_text FROM w_acc_st.w_op_cod_pub_flag WHERE trim(TYPE)='26'
2017-10-24 17:00:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:01:33:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201800'
2017-10-24 17:01:33:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 17:01:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:01:53:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 17:01:54:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 17:02:10:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 17:02:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 17:02:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 17:02:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 17:02:22:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 17:02:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 17:02:22:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 17:02:22:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 17:02:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:03:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:04:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:05:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:06:07:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 17:06:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 17:06:27:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 17:06:27:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.getMakeCardsByEmployeeId(MakeCardDao.java:116)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where 1=1  and trim(employee_id) = '鍚堟彁浜氬皵' and trim(logical_id) = '8300000301000001'
2017-10-24 17:06:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:07:01:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(employee_id) = '201800'
2017-10-24 17:07:01:INFO  [com.goldsign.etmcs.dao.impl.OperateLogDao.insertOperaterLogs(OperateLogDao.java:96)] - sqlStr:INSERT INTO W_ACC_TK.W_IC_ET_OPRTLOG (water_no, oper_id, oprt_time, oprt_content, oprt_result)VALUES (W_ACC_TK.W_SEQ_IC_ET_OPRTLOG.nextval, ?, SYSDATE, ?, ?)
2017-10-24 17:07:37:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:305)] - 票卡分析:AnalyzeVo{bIssueStatus=1, bStatus=201, cTicketType=0500, cLogicalID=8300000301000001, cPhysicalID=83097F3C            , bCharacter=2, cIssueDate=20170301000000, cExpire=20181231, rfu=                , lBalance=100000, lDeposite=0, cLine=00, cStationNo=00, cDateStart=20170601, cDateEnd=20181231, dtDaliyActive=0000000, bEffectDay=00, cLimitEntryLine=00, cLimitEntryStation=00, cLimitExitLine=00, cLimitExitStation=00, cLimitMode=000, certificateIscompany=0, certificateIsmetro=0, certificateName=鍙や附濞滄墡灏斅锋嫓, certificateCode=鍚堟彁浜氬皵                    , certificateType=0, certificateSex=0, tradeCount=2816}
2017-10-24 17:07:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:07:40:INFO  [com.goldsign.etmcs.service.impl.RwDeviceService.analyze(RwDeviceService.java:309)] - 票卡分析成功！
2017-10-24 17:07:49:INFO  [com.goldsign.etmcs.dao.impl.MakeCardDao.isExistsMakeCard(MakeCardDao.java:153)] - sqlStr:select * from W_ACC_TK.W_IC_ET_ISSUE where use_state='0'  and trim(logical_id) = '8300000301000001'
2017-10-24 17:08:06:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,30
2017-10-24 17:08:06:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 17:08:06:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 17:08:06:INFO  [com.goldsign.etmcs.service.impl.KmsService.setKmsLock(KmsService.java:150)] - 设置加密机锁成功！
2017-10-24 17:08:06:INFO  [com.goldsign.etmcs.commu.EsCommuClient.send(EsCommuClient.java:90)] - 发送数据:39,38,31
2017-10-24 17:08:06:INFO  [com.goldsign.etmcs.commu.EsCommuClient.read(EsCommuClient.java:159)] - 长度:3
2017-10-24 17:08:06:INFO  [com.goldsign.etmcs.service.impl.CommuService.setKmsLock(CommuService.java:163)] - 锁加密机,结果：true
2017-10-24 17:08:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:09:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:10:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:11:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:12:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:13:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:14:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:15:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:16:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:17:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:18:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:19:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:20:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:21:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:22:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:23:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:24:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:25:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
2017-10-24 17:26:39:INFO  [com.goldsign.etmcs.service.impl.CommuService.isCommuOk(CommuService.java:121)] - ES通讯测试连接，结果：true
